% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_em_mv.R
\name{run_em_algorithm}
\alias{run_em_algorithm}
\title{Run the EM Algorithm on an em_model Object}
\usage{
run_em_algorithm(data, tolerance = 1e-05, max_iter = 100)
}
\arguments{
\item{tolerance}{A numeric threshold for convergence based on change in log-likelihood
between iterations. Default is \code{1e-5}.}

\item{max_iter}{Maximum number of iterations before stopping. Default is \code{100}.}

\item{model}{An object of class \code{em_model}, initialized with a numeric matrix.}
}
\value{
The updated \code{em_model} object with fields populated:
\describe{
\item{loglik_history}{A numeric vector of log-likelihood values per iteration.}
\item{parameters}{Final estimates: mean vector \code{mu} and covariance \code{Sigma}.}
\item{parameter_history}{List of \code{mu} and \code{Sigma} estimates at each iteration.}
\item{imputed}{Matrix with imputed values filled in.}
\item{early_stop}{List containing convergence flag and iteration count.}
}
}
\description{
Iteratively imputes missing values using the Expectation-Maximization (EM)
algorithm under the assumption of multivariate normality. The algorithm
alternates between imputing missing values (E-step) and updating parameters
(M-step) until convergence.
}
\details{
The E-step uses conditional expectations to impute missing values,
and the M-step updates the mean and covariance estimates using the imputed data.
}
\examples{
data <- matrix(c(1, NA, 3, 4), ncol = 2)
model <- em_model(data)
result <- run_em_algorithm(model, max_iter = 5)
result$imputed
plot(result$loglik_history, type = "l", main = "Log-Likelihood")
}
\seealso{
\code{\link{em_model}}, \code{\link{e_step_general_impute}}, \code{\link{m_step_estimate}}, \code{\link{log_likelihood_mvnorm}}
}
