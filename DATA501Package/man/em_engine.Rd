% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/em_engine.R
\name{em_engine}
\alias{em_engine}
\title{Core EM/MCEM Engine for an em_model Object}
\usage{
em_engine(
  model,
  method = "EM",
  tolerance = 1e-05,
  max_iter = 100,
  m = NULL,
  burn = NULL,
  thin = NULL,
  tau = NULL
)
}
\arguments{
\item{model}{An object of class \code{em_model}.}

\item{method}{Character string: either \code{"EM"} or \code{"MCEM"}.}

\item{tolerance}{A numeric threshold for convergence, based on the absolute change
in log-likelihood between iterations. Default is \code{1e-5}.}

\item{max_iter}{Maximum number of iterations. Default is \code{100}.}

\item{m}{Number of MCMC samples for the MCEM E-step (used only if method = "MCEM").}

\item{burn}{Number of burn-in iterations for the MCMC sampler (MCEM only).}

\item{thin}{Thinning parameter for MCMC sampler (MCEM only).}

\item{tau}{Proposal scale for Random Walk Metropolis-Hastings sampler (MCEM only).}
}
\value{
An updated \code{em_model} object with the following fields populated:
\describe{
\item{loglik_history}{Log-likelihood value at each iteration.}
\item{parameters}{Final estimated parameters: mean vector and covariance matrix.}
\item{parameter_history}{List of parameters tracked over iterations.}
\item{imputed}{Matrix with imputed values.}
\item{early_stop}{List with \code{converged} flag and number of \code{iterations}.}
\item{mc_diagnostics}{(Only if MCEM) Acceptance rates of the RW-MH sampler per iteration.}
}
}
\description{
Runs the Expectation-Maximization (EM) or Monte Carlo EM (MCEM) algorithm on
an \code{em_model} object assuming a multivariate normal distribution. The algorithm
iteratively imputes missing values (E-step) and updates parameters (M-step) until convergence
or a maximum number of iterations is reached.
}
\details{
This function is the computational engine underlying the user-facing
\code{\link{run_em_algorithm}} wrapper. It supports both deterministic EM and
stochastic MCEM modes. The appropriate E-step and M-step functions are dynamically
dispatched based on the model's \code{distribution} field.
}
\seealso{
\code{\link{em_model}}, \code{\link{run_em_algorithm}},
\code{\link{e_step_nvnorm}}, \code{\link{e_step_nvnorm_mc}},
\code{\link{m_step_nvnorm}}, \code{\link{log_likelihood_mvnorm}}
}
\keyword{internal}
